buildscript {
    repositories {
         jcenter()
    }
    dependencies {
        classpath "com.github.townsfolk:gradle-release:1.2"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:2.2.4"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:0.3"
        classpath "com.netflix.nebula:nebula-publishing-plugin:1.9.7"
        classpath "com.netflix.nebula:gradle-info-plugin:1.9.5"
    }
}


apply plugin: "idea"
apply plugin: "project-reports"
apply plugin: "groovy"
apply plugin: "info"
apply plugin: "release"
apply plugin: "nebula-source-jar"
apply plugin: "nebula-javadoc-jar"
apply plugin: "maven-publish"
apply plugin: "artifactory-publish"
apply plugin: "bintray"

repositories {
    jcenter()
}

dependencies {
    compile "com.netflix.feign:feign-gson:6.1.2"
    testCompile "org.codehaus.groovy:groovy-all:2.3.1"
    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
    testRuntime "cglib:cglib-nodep:3.1" // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.1" // allows mocking of classes without default constructor (together with CGLIB)
}

targetCompatibility = "1.7"
sourceCompatibility = "1.7"

publishing {
    publications {
        main(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }
}

artifactory {
    contextUrl = "https://oss.jfrog.org/artifactory"
    publish {
        repository {
            repoKey = "oss-snapshot-local"
            username = project.hasProperty("ojo_user") ? ojo_user : ""
            password = project.hasProperty("ojo_password") ? ojo_password : ""
            maven = true
        }
        defaults {
            publications "main"
        }
    }
    clientConfig.includeEnvVars = true
    if (System.getenv("TRAVIS")) {
        clientConfig.info.buildNumber = System.getenv("TRAVIS_BUILD_NUMBER")
        clientConfig.info.vcsRevision = System.getenv("TRAVIS_COMMIT")
    }
}

bintray {
    user = project.hasProperty("bintrayUserName") ? bintrayUserName : ""
    key = project.hasProperty("bintrayApiKey") ? bintrayApiKey : ""
    publications = ["main"]
    pkg {
        repo = "main"
        userOrg = "commercehub-oss"
        name = "sensu-java-api"
        desc = "Java API for the Sensu monitoring framework"
        licenses = ["Apache-2.0"]
    }
}

task checkSnapshot << {
    if (!version.contains("-SNAPSHOT")) {
        throw new GradleException("Version (${version}) needs -SNAPSHOT if publishing snapshot")
    }
}

artifactoryPublish.dependsOn checkSnapshot
createReleaseTag.dependsOn bintrayUpload
